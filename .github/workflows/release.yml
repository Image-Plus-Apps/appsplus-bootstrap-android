# This is a basic workflow to help you get started with Actions

name: Publish Packages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Version
        run: |
          tagname=${{ github.ref }}
          version=${tagname/refs\/tags\/v/}
          echo "VERSION_NAME=${tagname/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body:
          draft: false
          prerelease: false
          
      - name: Build Data Package
        run: ./gradlew data:assembleRelease -Pversion="${{ env.VERSION_NAME }}" -PGITHUB_USER="${{ github.actor }}" -PGITHUB_PERSONAL_ACCESS_TOKEN="{{ secrets.ACCESS_TOKEN }}"
      - name: Release Data Package
        run: ./gradlew data:publish -Pversion="${{ env.VERSION_NAME }}" -PGITHUB_USER="${{ github.actor }}" -PGITHUB_PERSONAL_ACCESS_TOKEN="{{ secrets.ACCESS_TOKEN }}"
          
      - name: Build UI Package
        run: ./gradlew ui:assembleRelease -Pversion="${{ env.VERSION_NAME }}" -PGITHUB_USER="${{ github.actor }}" -PGITHUB_PERSONAL_ACCESS_TOKEN="{{ secrets.ACCESS_TOKEN }}"
      - name: Release UI Package
        run: ./gradlew ui:publish -Pversion="${{ env.VERSION_NAME }}" -PGITHUB_USER="${{ github.actor }}" -PGITHUB_PERSONAL_ACCESS_TOKEN="{{ secrets.ACCESS_TOKEN }}"
          
      - name: Build Testing Package
        run: ./gradlew testing:assembleRelease -Pversion="${{ env.VERSION_NAME }}" -PGITHUB_USER="${{ github.actor }}" -PGITHUB_PERSONAL_ACCESS_TOKEN="{{ secrets.ACCESS_TOKEN }}"
      - name: Release Testing Package
        run: ./gradlew testing:publish -Pversion="${{ env.VERSION_NAME }}" -PGITHUB_USER="${{ github.actor }}" -PGITHUB_PERSONAL_ACCESS_TOKEN="{{ secrets.ACCESS_TOKEN }}"
      
